#! /bin/bash

for name in \
        binary_eq_operator \
        binary_ge_operator \
        binary_gt_operator \
        binary_le_operator \
        binary_lt_operator \
        datetime_eq_operator \
        datetime_ge_operator \
        datetime_gt_operator \
        datetime_le_operator \
        datetime_lt_operator \
        hex_eq_operator \
        hex_ge_operator \
        hex_gt_operator \
        hex_le_operator \
        hex_lt_operator \
        double_eq_operator \
        double_ge_operator \
        double_gt_operator \
        double_le_operator \
        double_lt_operator \
        integer_eq_operator \
        integer_ge_operator \
        integer_gt_operator \
        integer_le_operator \
        integer_lt_operator \
        no_such_function \
        print_column \
        println_column \
        re_column_match_comparison_operator \
        re_line_match_comparison_operator \
        re_line_match_implicit \
        re_line_match_implicit_pipe_delimited \
        stdin \
        substring_column \
        substring_column_empty_end_range \
        substring_column_empty_start_range \
        substring_column_negative_range \
        substring_column_overlapping_range \
        string_eq_operator \
        string_ge_operator \
        string_gt_operator \
        string_le_operator \
        string_lt_operator \
        double_lt_any_le_double_operator \
        ternary_boolean_error \
        integer_ge_operator_negative_column \
        any_gt_any ; do

    export JT=./jt
    export TEST_DIR="tests/$name"
    export TMP_DIR="$(mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir')"
    export TEST="${TEST_DIR}/test"
    export INPUT="${TEST_DIR}/input.txt"
    export STDOUT="${TMP_DIR}/stdout.txt"
    export STDERR="${TMP_DIR}/stderr.txt"
    export EXPECTED_STDOUT="${TEST_DIR}/expected-stdout.txt"
    export EXPECTED_STDERR="${TEST_DIR}/expected-stderr.txt"
    export EXPECTED_STATUS_FILE="${TEST_DIR}/expected-status.txt"

    if [[ ! -e $TEST_DIR ]]; then
        printf "%-60s Fail\n" $name
        echo "        Error: the test directory '$TEST_DIR' does not exist."
        exit 1
    fi
    if [[ ! -e $INPUT ]]; then
        printf "%-60s Fail\n" $name
        echo "        Error: the test input '$INPUT' does not exist."
        exit 1
    fi
    if [[ ! -e $EXPECTED_STDOUT ]]; then
        printf "%-60s Fail\n" $name
        echo "        Error: the expected stdout '$EXPECTED_STDOUT' does not exist."
        exit 1
    fi
    if [[ ! -e $EXPECTED_STDERR ]]; then
        printf "%-60s Fail\n" $name
        echo "        Error: the expected stderr '$EXPECTED_STDERR' does not exist."
        exit 1
    fi
    expectedStatus=0
    if [[ -e $EXPECTED_STATUS_FILE ]]; then
        expectedStatus=$(cat "$EXPECTED_STATUS_FILE")
    fi

    [[ ! -e ${JT} ]] && exit 1

    source "$TEST" > ${STDOUT} 2> ${STDERR}

    status=$?
    if [[ ! $status -eq $expectedStatus ]]; then
        printf "%-60s Fail\n" $name
        echo "        Status was $status but expected $expectedStatus"
        echo
        cat "$TEST" | grep -v "^#" | envsubst
        echo
        echo "        ${STDOUT}"
        echo "        ${STDERR}"
        exit 1
    fi

    if ! diff $STDOUT $EXPECTED_STDOUT >& /dev/null ; then
        printf "%-60s Fail\n" $name
        echo "        stdout did not match expected"
        echo
        cat "$TEST" | grep -v "^#" | envsubst
        echo
        echo "diff -y $STDOUT $EXPECTED_STDOUT"
        exit 1
    fi

    if ! diff $STDERR $EXPECTED_STDERR >& /dev/null ; then
        printf "%-60s Fail\n" $name
        echo "        stderr did not match expected"
        echo
        cat "$TEST" | grep -v "^#" | envsubst
        echo
        echo "diff -y $STDERR $EXPECTED_STDERR"
        exit 1
    fi

    #rm -Rf ${TMP_DIR}

done

printf "%-60s Success\n" "All tests"
